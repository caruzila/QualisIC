@model QualisIC.Models.ViewModel.ConferenciaViewModel
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />


@using (Html.BeginForm())
{
    <div class="container rowFiltro">
        <div style="width: 100%" class="row form-inline">
            <div class="col-lg-2">
                @Html.TextBox("searchSigla", "", new { @class = "form-control inputFiltro", @placeholder = "Filtrar por Sigla" })
            </div>
            <div class="col-lg-2">
                @Html.TextBox("searchConferenia", "", new { @class = "form-control inputFiltro", @placeholder = "Filtrar por Conferencia" })
            </div>
            <div class="col-lg-2">
                @Html.TextBox("searchExtratoc", "", new { @class = "form-control inputFiltro", @placeholder = "Filtrar por Extrato" })
            </div>
            <div class="col-lg-2">
                @Html.DropDownList("searchAreac", new SelectList(ViewBag.AreaModelc), "Selecionar Area", new { @class = "dropdown btn dropdown-toggle dropdownArea inputFiltro" })
            </div>
            <div class="col-lg-2">
                <input type="submit" value="Aplicar filtros" style="margin-left: 20px" class="btn btn-primary" />
                <input type="hidden" id="page" name="page" value="1">
            </div>
        </div>
    </div>
}

<div>
    <table class="table" style="margin-top: 10px">
        <tr>
            <th>@Html.ActionLink("Sigla", "Conferencias", new { sortOrderc = ViewBag.SiglaSortParm, searchSigla = ViewBag.filterSigla, searchExtratoc = ViewBag.filterExtratoc, searchAreac = ViewBag.filterAreac, searchConferencia = ViewBag.filterConferencia })</th>
            <th>@Html.ActionLink("Conferencia", "Conferencias", new { sortOrderc = ViewBag.ConferenciaSortParm, searchSigla = ViewBag.filterSigla, searchExtratoc = ViewBag.filterExtratoc, searchAreac = ViewBag.filterAreac, searchConferencia = ViewBag.filterConferencia })</th>
            <th>@Html.ActionLink("Extrato Capes", "Conferencias", new { sortOrderc = ViewBag.ExtratocSortParm, searchSigla = ViewBag.filterSigla, searchExtratoc = ViewBag.filterExtratoc, searchAreac = ViewBag.filterAreac, searchConferencia = ViewBag.filterConferencia })</th>
            <th>@Html.ActionLink("Área", "Conferencias", new { sortOrderc = ViewBag.AreacSortParm, searchSigla = ViewBag.filterSigla, searchExtratoc = ViewBag.filterExtratoc, searchAreac = ViewBag.filterAreac, searchConferencia = ViewBag.filterConferencia })</th>
        </tr>
        @foreach (var itemc in Model.listac)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => itemc.Sigla)</td>
                <td>@Html.DisplayFor(modelItem => itemc.Conferencia_name)</td>
                <td>@Html.DisplayFor(modelItem => itemc.Extrato)</td>
                <td>@Html.DisplayFor(modelItem => itemc.Area_name)</td>

            </tr>
        }
    </table>
    <br />
    Page @(Model.listac.PageCount < Model.listac.PageNumber ? 0 : Model.listac.PageNumber) of @Model.listac.PageCount

    @Html.PagedListPager(Model.listac, page => Url.Action("Conferencias", new { page, sortOrderc = Model.sortOrderc, searchAreac = Model.searchAreac, searchExtratoc = Model.searchExtratoc, searchSigla = Model.searchSigla, searchConferencia = Model.searchConferencia }))

</div>
    </div>
